# Copyright (C) 2022 The Jackson Laboratory
# Copyright (C) 2022 University of Dundee & Open Microscopy Environment.
# All rights reserved.
#
# Use is subject to license terms supplied in LICENSE.

# Install and test and OMERO plugin e.g. a Web app, a CLI plugin or a library
#
# This workflow will install omero-test-infra, start an OMERO environment
# including database, server and web deployment, configure the OMERO plugin
# and run integration tests.
#
# 1. Set up the stage variable depending on the plugin. Supported stages
# are: app, cli, scripts, lib, srv
#
# 2. Adjust the cron schedule as necessary

name: OMERO
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  test:
    name: Run integration tests against OMERO
    runs-on: ubuntu-latest
    env:
      STAGE: cli
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"
          channels: conda-forge
          activate-environment: omero-transfer

      - name: Create and activate Conda environment
        run: |
          conda init
          conda create -n omero-transfer -c conda-forge python=3.9 zeroc-ice==3.6.5
          echo "conda activate omero-transfer" >> ~/.bashrc
          source ~/.bashrc
          conda info --envs

      - name: Checkout omero-test-infra
        uses: actions/checkout@master
        with:
          repository: ome/omero-test-infra
          path: .omero
          ref: ${{ secrets.OMERO_TEST_INFRA_REF }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Build and run standard tests
        run: |
          conda run -n omero-transfer POLICY_BINARY_ACCESS=+read,+write,+image,+plate .omero/docker $STAGE

      - name: Build and run no-plate tests
        run: |
          conda run -n omero-transfer .omero/docker $STAGE

